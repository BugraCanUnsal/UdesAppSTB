@page "/students"
@using UdesAPP.GeneralEnums
@using UdesAPP.Localization
@using Volo.Abp.Application.Dtos
@using UdesAPP.Students
@using UdesAPP.Classes
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Web
@inject IStringLocalizer<UdesAPPResource> L
@inject AbpBlazorMessageLocalizerHelper<UdesAPPResource> LH
@inherits AbpCrudPageBase<IStudentAppService, StudentDto, int, PagedAndSortedResultRequestDto,CreateUpdateStudentsDto>

<Card>
    <CardHeader>
        <Row Class="justify-content">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Tüm Öğrenciler"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary"
                        Clicked="OpenCreateModalAsync">
                    @L["Yeni Öğrenci"]
                </Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="StudentDto"
                  Data="@StudentDtos"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Filterable
                  FilterMethod="DataGridFilterMethod.Contains"
                  Responsive
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn Filterable="false" TItem="StudentDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="StudentDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="StudentDto"
                                          Text="@L["Düzenle"]"
                                          Clicked="() => OpenEditModalAsync(context)" />                            
                            <EntityAction TItem="StudentDto"
                                          Text="@L["Sil"]"
                                          Clicked="() => DeleteEntityAsync(context)"
                                          ConfirmationMessage="() => GetDeleteConfirmationMessage(context)" />
                            <EntityAction TItem="StudentDto"
                                          Text="@L["Ödeme Başlat"]"
                                          Clicked="() => StartPaymentProcess(context)" />
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
                <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.Name)"
                                Caption="@L["İsim"]"></DataGridColumn>
                <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.Surname)"
                                Caption="@L["Soyadı"]">                    
                </DataGridColumn>
                @* <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.Birthdate)"
                                Caption="@L["Doğum Tarihi"]">
                    <DisplayTemplate>
                        @context.Birthdate.Value.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn> *@
                <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.GSM)"
                                Caption="@L["Telefon"]">
                </DataGridColumn>
                <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.Email)"
                                Caption="@L["Email"]">
                </DataGridColumn>
                @* <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.Address)"
                                Caption="@L["Adres"]">
                </DataGridColumn> *@
                <DataGridColumn TItem="StudentDto"
                                CustomFilter="@OnClassesFilter"
                                Field="@nameof(StudentDto.ClassId)"
                                Caption="@L["Sınıfı"]">
                    <DisplayTemplate>
                        @foreach (AllClassesDto allClassesDto in AllClassesDtos)
                        {     
                            if (allClassesDto.Id == context.ClassId)
                            {
                                @L[$"{allClassesDto.ClassName}"]
                            }                                                            
                        }
                    </DisplayTemplate>
                </DataGridColumn>
               @*  <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.Gender)"
                                Caption="@L["Cinsiyet"]">
                    <DisplayTemplate>
                        @L[$"{context.Gender}"]
                    </DisplayTemplate>
                </DataGridColumn> *@
                <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.IsActive)"
                                Caption="@L["Kayıt Durumu"]">
                    <DisplayTemplate>
                        @L[$"{context.IsActive}"]
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.Type)"
                                Caption="@L["Öğrenci Tipi"]">
                    <DisplayTemplate>
                        @L[$"{context.Type}"]
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.GroupLessonFee)"
                                Caption="@L["Grup Ders Ücreti"]">
                </DataGridColumn>
                <DataGridColumn TItem="StudentDto"
                                Field="@nameof(StudentDto.IndividualLessonFee)"
                                Caption="@L["Özel Ders Ücreti"]">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="@CreateModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["Yeni Öğrenci"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["İsim"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Soyadı"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Surname">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Doğum Tarihi"]</FieldLabel>
                        <DateEdit TValue="DateTime" @bind-Date="NewEntity.Birthdate" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["Telefon"]</FieldLabel>
                        <TextEdit @bind-Text="@NewEntity.GSM">
                        </TextEdit>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Email"]</FieldLabel>
                        <TextEdit @bind-Text="@NewEntity.Email">
                        </TextEdit>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Adres"]</FieldLabel>
                        <MemoEdit Rows="5" @bind-Text="@NewEntity.Address">
                        </MemoEdit>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Sınıfı"]</FieldLabel>
                        <Select TValue="int" @bind-SelectedValue="@NewEntity.ClassId">
                            @if (Loaded)
                            {
                                @foreach (AllClassesDto allClassesDto in AllClassesDtos)
                                {
                                    <SelectItem TValue="int" Value="allClassesDto.Id">
                                        @L[$"{allClassesDto.ClassName}"]
                                    </SelectItem>
                                }
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Cinsiyet"]</FieldLabel>
                        <Select TValue="Gender?" @bind-SelectedValue="@NewEntity.Gender">
                            @foreach (var genderTypeValue in Enum.GetValues(typeof(Gender)))
                            {
                                <SelectItem TValue="Gender" Value="@((Gender) genderTypeValue)">
                                    @L[$"{genderTypeValue}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Kayıt Durumu"]</FieldLabel>
                        <Select TValue="StudentState" @bind-SelectedValue="@NewEntity.IsActive">
                            @foreach (var studentStateValue in Enum.GetValues(typeof(StudentState)))
                            {
                                <SelectItem TValue="StudentState" Value="@((StudentState) studentStateValue)">
                                    @L[$"{studentStateValue}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Öğrenci Tipi"]</FieldLabel>
                        <Select TValue="StudentType?" @bind-SelectedValue="@NewEntity.Type">
                            @foreach (var studentTypeValue in Enum.GetValues(typeof(StudentType)))
                            {
                                <SelectItem TValue="StudentType" Value="@((StudentType) studentTypeValue)">
                                    @L[$"{studentTypeValue}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>                    
                    <Field>
                        <FieldLabel>@L["Grup Ders Ücreti"]</FieldLabel>
                        <NumericEdit TValue="decimal" @bind-Value="NewEntity.GroupLessonFee"/>
                    </Field> 
                    <Field>
                        <FieldLabel>@L["Özel Ders Ücreti"]</FieldLabel>
                        <NumericEdit TValue="decimal" @bind-Value="NewEntity.IndividualLessonFee" />
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">@L["İptal"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">@L["Kaydet"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="@EditModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingEntity.Name @EditingEntity.Surname</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["İsim"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Soyadı"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.Surname">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Doğum Tarihi"]</FieldLabel>
                        <DateEdit TValue="DateTime" @bind-Date="EditingEntity.Birthdate" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["Telefon"]</FieldLabel>
                        <TextEdit @bind-Text="@EditingEntity.GSM">
                        </TextEdit>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Email"]</FieldLabel>
                        <TextEdit @bind-Text="@EditingEntity.Email">
                        </TextEdit>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Adres"]</FieldLabel>
                        <MemoEdit Rows="5" @bind-Text="@EditingEntity.Address">
                        </MemoEdit>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Sınıfı"]</FieldLabel>
                        <Select TValue="int" @bind-SelectedValue="@EditingEntity.ClassId">
                            @if (Loaded)
                            {
                                @foreach (AllClassesDto allClassesDto in AllClassesDtos)
                                {
                                    <SelectItem TValue="int" Value="allClassesDto.Id">
                                        @L[$"{allClassesDto.ClassName}"]
                                    </SelectItem>
                                }
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Cinsiyet"]</FieldLabel>
                        <Select TValue="Gender?" @bind-SelectedValue="@EditingEntity.Gender">
                            @foreach (var genderTypeValue in Enum.GetValues(typeof(Gender)))
                            {
                                <SelectItem TValue="Gender" Value="@((Gender) genderTypeValue)">
                                    @L[$"{genderTypeValue}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Kayıt Durumu"]</FieldLabel>
                        <Select TValue="StudentState" @bind-SelectedValue="@EditingEntity.IsActive">
                            @foreach (var studentStateValue in Enum.GetValues(typeof(StudentState)))
                            {
                                <SelectItem TValue="StudentState" Value="@((StudentState) studentStateValue)">
                                    @L[$"{studentStateValue}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Öğrenci Tipi"]</FieldLabel>
                        <Select TValue="StudentType?" @bind-SelectedValue="@EditingEntity.Type">
                            @foreach (var studentTypeValue in Enum.GetValues(typeof(StudentType)))
                            {
                                <SelectItem TValue="StudentType" Value="@((StudentType) studentTypeValue)">
                                    @L[$"{studentTypeValue}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Grup Ders Ücreti"]</FieldLabel>
                        <NumericEdit TValue="decimal" @bind-Value="EditingEntity.GroupLessonFee"/>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Özel Ders Ücreti"]</FieldLabel>
                        <NumericEdit TValue="decimal" @bind-Value="EditingEntity.IndividualLessonFee"/>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditModalAsync">@L["İptal"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateEntityAsync">@L["Kaydet"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>