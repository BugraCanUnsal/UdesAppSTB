@page "/books"
@using UdesAPP.GeneralEnums
@using UdesAPP.Localization
@using Volo.Abp.Application.Dtos
@using UdesAPP.Books
@using UdesAPP.Params
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Web
@inject IStringLocalizer<UdesAPPResource> L
@inject AbpBlazorMessageLocalizerHelper<UdesAPPResource> LH
@inject NavigationManager NavigationManager
@inject ParametersAppService ParametersAppService
@inherits AbpCrudPageBase<IBooksCRUDAppService, BooksDto, Guid, PagedAndSortedResultRequestDto, BooksDto>

<style>
    .invalid-feedback {
        display: block !important;
    }
</style>

<Card>
    <CardHeader>
        <Row Class="justify-content">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Kitaplar"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary"
                        Clicked="OpenCreateModalAsync">
                    @L["Yeni Kitap"]
                </Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="BooksDto"
                  Data="Entities"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="BooksDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="BooksDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="BooksDto"
                                          Text="@L["Düzenle"]"
                                          Clicked="() => OpenEditModalAsync(context)" />
                            <EntityAction TItem="BooksDto"
                                          Text="@L["Sil"]"
                                          Clicked="() => DeleteEntityAsync(context)"
                                          ConfirmationMessage="() => GetDeleteConfirmationMessage(context)" />                            
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
                <DataGridColumn TItem="BooksDto"
                                Field="@nameof(BooksDto.Title)"
                                Caption="@L["Kitap Adı"]">
                </DataGridColumn>
                <DataGridColumn TItem="BooksDto"
                                Field="@nameof(BooksDto.Serie)"
                                Caption="@L["Kitap Serisi"]">
                    <DisplayTemplate>
                        @if (Loaded)
                        {
                            @foreach (ParametersDto paramDto in BookSeriesDto)
                            {
                                @if (paramDto.ParamCode == context.Serie)
                                {
                                    @paramDto.ParamDescription;
                                }
                            }
                        }                       
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="BooksDto"
                                Field="@nameof(BooksDto.Program)"
                                Caption="@L["Eğitim Programı"]">
                    <DisplayTemplate>
                        @if (Loaded)
                        {
                            @foreach (ParametersDto paramDto in EduProgramDto)
                            {
                                @if (paramDto.ParamCode == context.Program)
                                {
                                    @paramDto.ParamDescription;
                                }
                            }
                        }                     
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="BooksDto"
                                Field="@nameof(BooksDto.NumberOfPages)"
                                Caption="@L["Sayfa Miktarı"]">
                </DataGridColumn>
                <DataGridColumn TItem="BooksDto"
                                Field="@nameof(BooksDto.NumberOfTopics)"
                                Caption="@L["Ünite Miktarı"]">
                </DataGridColumn>
                <DataGridColumn TItem="BooksDto"
                                Field="@nameof(BooksDto.NumberOfSentences)"
                                Caption="@L["Cümle Örneği Miktarı"]">
                </DataGridColumn>
                <DataGridColumn TItem="BooksDto"
                                Field="@nameof(BooksDto.NumberOfWords)"
                                Caption="@L["Kelime Miktarı"]">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="@CreateModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["Yeni Kitap"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                        <Field>
                            <FieldLabel>@L["Kitap Adı"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Title">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                        <Field>
                            <FieldLabel>@L["Serisi"]</FieldLabel>
                            <Select @key="NewEntity.Serie" TValue="int?" SelectedValue="@NewEntity.Serie"  SelectedValueChanged="@(value => OnSerieChanged(value, NewEntity))">
                                <SelectItem TValue="int?" Value="0">@L["Bir seri seçiniz..."]</SelectItem>
                                @foreach (var paramDto in BookSeriesDto)
                                {
                                    <SelectItem TValue="int?" Value="paramDto.ParamCode">
                                        @L[$"{paramDto.ParamDescription}"]
                                    </SelectItem>
                                }
                            </Select>
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </Field>
                    <Field>
                        <FieldLabel>@L["Eğitim Programı"]</FieldLabel>
                        <Select @key="NewEntity.Program" TValue="int?" SelectedValue="@NewEntity.Program" SelectedValueChanged="@(value => OnProgramChanged(value, NewEntity))">
                            <SelectItem TValue="int?" Value="0">@L["Bir eğitim programı seçiniz..."]</SelectItem>
                            @foreach (var paramDto in EduProgramDto)
                            {
                                <SelectItem TValue="int?" Value="paramDto.ParamCode">
                                    @L[$"{paramDto.ParamDescription}"]
                                </SelectItem>
                            }
                        </Select>
                        <Feedback>
                            <ValidationError />
                        </Feedback>
                    </Field>
                    <Field>
                        <FieldLabel>@L["Sayfa Miktarı"]</FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="NewEntity.NumberOfPages" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["Ünite Miktari"]</FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="NewEntity.NumberOfTopics" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["Cümle Öğrneği Miktarı"]</FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="NewEntity.NumberOfSentences" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["Kelime Miktarı"]</FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="NewEntity.NumberOfWords" />
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">@L["İptal"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">@L["Kaydet"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="@EditModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingEntity.Title</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                        <Field>
                            <FieldLabel>@L["İsim"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.Title">
                            </TextEdit>
                        </Field>
                        <Field>
                            <FieldLabel>@L["Serisi"]</FieldLabel>
                            <Select @key="EditingEntity.Serie" TValue="int?" SelectedValue="@EditingEntity.Serie"  SelectedValueChanged="@(value => OnSerieChanged(value, EditingEntity))">
                                <SelectItem TValue="int?" Value="0">@L["Bir seri seçiniz..."]</SelectItem>
                                @foreach (var paramDto in BookSeriesDto)
                                {
                                    <SelectItem TValue="int?" Value="paramDto.ParamCode">
                                        @L[$"{paramDto.ParamDescription}"]
                                    </SelectItem>
                                }
                            </Select>
                        </Field>
                        <Field>
                            <FieldLabel>@L["Eğitim Programı"]</FieldLabel>
                            <Select @key="EditingEntity.Program" TValue="int?" SelectedValue="@EditingEntity.Program" SelectedValueChanged="@(value => OnProgramChanged(value, EditingEntity))">
                                <SelectItem TValue="int?" Value="0">@L["Bir eğitim programı seçiniz..."]</SelectItem>
                                @foreach (var paramDto in EduProgramDto)
                                {
                                    <SelectItem TValue="int?" Value="paramDto.ParamCode">
                                        @L[$"{paramDto.ParamDescription}"]
                                    </SelectItem>
                                }
                            </Select>
                        </Field>
                    <Field>
                        <FieldLabel>@L["Sayfa Miktarı"]</FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="EditingEntity.NumberOfPages" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["Ünite Miktari"]</FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="EditingEntity.NumberOfTopics" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["Cümle Öğrneği Miktarı"]</FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="EditingEntity.NumberOfSentences" />
                    </Field>
                    <Field>
                        <FieldLabel>@L["Kelime Miktarı"]</FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="EditingEntity.NumberOfWords" />
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditModalAsync">@L["İptal"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateEntityAsync">@L["Kaydet"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>